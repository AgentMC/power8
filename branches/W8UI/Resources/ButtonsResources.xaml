<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Power8.Converters">

    <converters:NameToResourceConverter x:Key="LocalizerConverter" />
    <converters:MenuWidthToMarginConverter x:Key="ThemeApplierConverter" />
    <converters:BitmapSource2VisibilityConverter x:Key="imageDisplay" />
    <converters:BoolToGridRowConverter x:Key="uiSwitcher" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <!--TODO: why not to move this to ContentControl style?-->
    <Style x:Key="Localized" TargetType="{x:Type Button}">
        <Setter Property="Content" 
                Value="{Binding Name, Converter={StaticResource LocalizerConverter}, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
    </Style>
    
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Localized}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="LayoutRoot"
                          SnapsToDevicePixels="True"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.02"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressedGradient">
                                        	<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.02"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.02"/>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border"
                                BorderBrush="{DynamicResource WhiteAlfa30}"
                                Opacity="0" />
                        <Border x:Name="pressedGradient"
                                Background="{DynamicResource PressedGradientBrush}"
                                Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="StartButtonStyle" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<Grid x:Name="grid" SnapsToDevicePixels="True">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="Disabled"/>
    							<VisualState x:Name="MouseOver">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Unfocused"/>
    							<VisualState x:Name="Focused"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="ValidationStates">
    							<VisualState x:Name="Valid"/>
    							<VisualState x:Name="InvalidFocused"/>
    							<VisualState x:Name="InvalidUnfocused"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Grid x:Name="_30x30Container" Width="30"
    							Height="30">
    						<Grid Opacity="0.8"
    							x:Name="winGrid"    							
    							Visibility="Hidden">
    							<Grid.RowDefinitions>
    								<RowDefinition />
    								<RowDefinition />
    							</Grid.RowDefinitions>
    							<Grid.ColumnDefinitions>
    								<ColumnDefinition />
    								<ColumnDefinition />
    							</Grid.ColumnDefinitions>
    							<Border Background="#FF9933FF" />
    							<Border Background="#FFFF66FF"
    								Grid.Row="1" />
    							<Border Grid.Column="1"
    								Background="#FF66FFFF" />
    							<Border Background="#FF0099FF"
    								Grid.Column="1"
    								Grid.Row="1" />
    							<Border BorderBrush="#7FFFFFFF" BorderThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
    							<Border x:Name="hover" BorderBrush="White" BorderThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="2" Opacity="0">
    								<Border.Background>
    									<RadialGradientBrush Center="0,0" GradientOrigin="0,0">
    										<GradientStop Color="#26FFFFFF" Offset="1"/>
    										<GradientStop Color="#FFD55BD5"/>
    									</RadialGradientBrush>
    								</Border.Background>
    								<Border x:Name="border">
    									<Border.Background>
    										<RadialGradientBrush Center="1,1" GradientOrigin="1,1">
    											<GradientStop Color="Transparent" Offset="1"/>
    											<GradientStop Color="#FF79D5D5" Offset="0.315"/>
    										</RadialGradientBrush>
    									</Border.Background>
    								</Border>
    							</Border>
    						</Grid>
    						<Grid x:Name="warningGrid"
    							Width="15"
    							Height="15"
    							HorizontalAlignment="Left"
    							Grid.Row="0"
    							Visibility="Collapsed" 
                                  VerticalAlignment="Bottom">
    							<Rectangle Fill="#FFFFF500" />
    							<TextBlock TextWrapping="Wrap"
    								Text="!"
    								HorizontalAlignment="Center"
    								VerticalAlignment="Center"
    								Foreground="#FF333333"
    								Padding="0,2,0,0"
    								FontWeight="Bold" />
    						</Grid>
    					</Grid>
    					<ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}"
    						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
    						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="ContentControl.Content" Value="{x:Null}" SourceName="contentPresenter">
    						<Setter Property="Visibility" TargetName="winGrid" Value="Visible"/>
    					</Trigger>
                        <Trigger Property="Tag" Value="ShowWarningIcon">
                            <Setter Property="Visibility" TargetName="warningGrid" Value="Visible"/>
                            <Setter Property="Background" TargetName="hover">
                            	<Setter.Value>
                            		<RadialGradientBrush Center="0,0" GradientOrigin="0,0">
                            			<GradientStop Color="#26FFFFFF" Offset="1"/>
                            			<GradientStop Color="#FFD55BD5"/>
                            		</RadialGradientBrush>
                            	</Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="border">
                            	<Setter.Value>
                            		<RadialGradientBrush Center="1,1" GradientOrigin="1,1">
                            			<GradientStop Color="#26FFFFFF" Offset="1"/>
                            			<GradientStop Color="#FF79D5D5" Offset="0.315"/>
                            		</RadialGradientBrush>
                            	</Setter.Value>
                            </Setter>
                        </Trigger>
    					<Trigger Property="IsMouseOver" Value="True"/>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsEnabled" Value="false"/>
    					<Trigger Property="IsPressed" Value="True"/>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>
    
    <Style x:Key="MainButtonTransparentStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Width="Auto" BorderThickness="1" BorderBrush="{DynamicResource BlackBrush}" SnapsToDevicePixels="True">
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverState">
                							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedState">
                							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                						</ObjectAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedState">
                							<EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Disabled"/>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="FocusStates">
                				<VisualState x:Name="Unfocused"/>
                				<VisualState x:Name="Focused"/>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="ValidationStates">
                				<VisualState x:Name="Valid"/>
                				<VisualState x:Name="InvalidFocused"/>
                				<VisualState x:Name="InvalidUnfocused"/>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                        <Grid x:Name="grid"
                              Height="Auto">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Border x:Name="NormalBorder"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource ButtonBorderBrush}">
                                <Border x:Name="NormalBG"
                                        Height="10"
                                        VerticalAlignment="Top"
                                        MinWidth="40"
                                        Background="{DynamicResource ButtonBackgroundBrush}"
                                        OpacityMask="{DynamicResource ButtonOpacityMask}"
                                        SnapsToDevicePixels="False" />
                            </Border>
                            <Border x:Name="MouseOverState"
                                    BorderThickness="1"
                                    Visibility="Collapsed"
                                    Background="{DynamicResource MouseOverBrush}" />
                            <Border x:Name="PressedState"
                                    BorderThickness="1"
                                    Visibility="Collapsed"
                                    Background="{DynamicResource PressedGradientBrush}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="MouseOverState" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="PressedState" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="LeftMenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="10,3"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10,3"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="Auto" x:Name="LayoutRoot" Height="Auto" SnapsToDevicePixels="True" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.02"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressedGradient">
                                        	<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.02"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.02"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                    		<Grid.RowDefinitions>
                    			<RowDefinition/>
                    			<RowDefinition/>
                    		</Grid.RowDefinitions>
                    		<Border x:Name="PressedBorder" BorderBrush="Black" BorderThickness="1" CornerRadius="1,0,0,1" Grid.RowSpan="2" Opacity="0"/>
                    	</Grid>
                        <Border x:Name="pressedGradient" Grid.RowSpan="1" CornerRadius="2" Height="Auto" BorderThickness="2" Background="{DynamicResource PressedGradientBrush}" Opacity="0"/>
                    	<Border x:Name="FocusedBorder" BorderBrush="{DynamicResource WhiteAlfa30}" BorderThickness="1" CornerRadius="2,0,0,2" Grid.RowSpan="1" Opacity="0"/>
                    	<ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PinToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid x:Name="grid" 
                          Background="Transparent">
                        <Path x:Name="path" 
                              Data="{DynamicResource PinGeometry}"
                              Fill="#FFB4B4B4"
                              Stretch="None"
							  Margin="0,2,0,0"
							  RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center">
                        	<Path.RenderTransform>
                        		<TransformGroup>
                        			<ScaleTransform/>
                        			<SkewTransform/>
                        			<RotateTransform/>
                        			<TranslateTransform/>
                        		</TransformGroup>
                        	</Path.RenderTransform>
                        </Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="path" Value="#FF666666"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Fill" TargetName="path" Value="#FF4E4E4E"/>
							<Setter Property="Margin" TargetName="path" Value="0"/>
							<Setter Property="RenderTransform" TargetName="path">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="-90"/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
    <Style x:Key="ControlButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource Localized}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Margin" Value="0"/>
    	<Setter Property="HorizontalContentAlignment" Value="Left"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="10,8"/>
		<Setter Property="FontSize" Value="16"/>
    	<Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<Grid x:Name="LayoutRoot"
    					SnapsToDevicePixels="True"
    					Background="Transparent">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.02"/>
    								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.02"/>
    								<VisualTransition GeneratedDuration="0" To="MouseOver">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border"/>
    									</Storyboard>
    								</VisualTransition>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="MouseOver">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.02"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="Unfocused"/>
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="ValidationStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.02"/>
    							</VisualStateGroup.Transitions>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Border x:Name="border"
								Background="#FF0099FF"
								Opacity="0">
                            <!--Background="#FF0099FF"-->
                            <!--<Border.Background>
                                <SolidColorBrush 
								Color="{Binding Path=DataContext.MainApplicationColor, RelativeSource={RelativeSource FindAncestor, 
								AncestorType={x:Type ApplicationArchitecture:MainWindow}, Mode=FindAncestor}, FallbackValue=CornflowerBlue}" />
                            </Border.Background>-->
                        </Border>
    					<ContentPresenter x:Name="contentPresenter"
    						Margin="{TemplateBinding Padding}"
    						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
    						VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" Value="0.4"/>
    					</Trigger>
    					<Trigger Property="IsPressed" Value="True"/>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    
</ResourceDictionary>